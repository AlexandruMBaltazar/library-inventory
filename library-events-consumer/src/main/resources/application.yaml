
spring:
  application:
    name: library-events-consumer
  profiles:
    active: local
  kafka:
    consumer:
      properties:
        schema.registry.url: http://localhost:8081
        allow.auto.create.topics: false
        specific.avro.reader: true
      bootstrap-servers: localhost:9092
      group-id: library-events-listener-group
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
    producer:
      properties:
        schema.registry.url: http://localhost:8081
        allow.auto.create.topics: false
      bootstrap-servers: localhost:9092
      group-id: library_group
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
    generate-ddl: true
  h2:
    console:
      enabled: true
topic:
  library: avro-library-tp
server:
  port: 8882